import { useMap } from 'react-leaflet';
import { useEffect } from 'react';
import L from 'leaflet';

const RoutingMachine = ({ waypoints }) => {
  const map = useMap();
  const colors = ['#007bff', '#28a745', '#ffc107', '#dc3545', '#6f42c1', '#17a2b8'];

  useEffect(() => {
    if (!map || !waypoints || waypoints.length < 2) return; // Ensure waypoints is defined and contains at least 2 points

    const coordinates = waypoints.map(point => point.join(',')).join(';');
    const accessToken = 'pk.eyJ1IjoiY2N4MTQyOSIsImEiOiJjbWE3eWp4d3kwajQyMmxwdGpka3NoaGZtIn0.dFehqYfPUQa6jGJIixWWig';  // Replace with your Mapbox API Key
    const url = `https://api.mapbox.com/directions/v5/mapbox/driving/${coordinates}?alternatives=true&geometries=geojson&access_token=${accessToken}`;

    const fetchRoute = async () => {
      try {
        const res = await fetch(url);
        const data = await res.json();
        console.log(data); // Log the response to debug

        if (data.routes && data.routes.length > 0) {
          data.routes.forEach((route, index) => {
            const coords = route.geometry.coordinates.map(([lng, lat]) => [lat, lng]);

            const polyline = L.polyline(coords, {
              color: colors[index % colors.length],
              weight: 4,
              opacity: 0.8
            }).addTo(map);
          });
        }
      } catch (err) {
        console.error('Routing error:', err);
      }
    };

    fetchRoute();

  }, [map, waypoints]); // Ensure waypoints is a dependency for the effect

  return null;
};

export default RoutingMachine;
